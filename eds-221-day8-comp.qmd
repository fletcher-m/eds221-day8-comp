---
title: "eds-221-day8-comp"
format: html
editor: visual
---

## Review Basics of GGPLOT

```{r}
library(tidyverse)
library(here)
library(janitor)

library(patchwork)
library(ggrepel)
library(gghighlight)
library(paletteer)
```

```{r}
lizards <- read_csv(here("data_tidy", "lizards.csv"))
```

Do some data wrangling to create a new subset from lizards where you:

1\) Limit the data to only contain western whiptails, colorado checkered, and eastern fence lizards

2\) Add a new column with total length converted to cm

3\) Group by species and site

4\) Return a summary table with mean total length and standard deviation of total length by species and site

```{r}
lizards_subset <- lizards |> 
  filter(common_name == "western whiptail" | common_name == "colorado checkered" | common_name == "eastern fence") |> 
  mutate(total_length_cm = total_length / 10) |> 
  group_by(common_name, site) |> 
  summarize(mean_length_cm = mean(total_length_cm, na.rm = TRUE),
            sd_length_cm = sd(total_length_cm, na.rm = TRUE))
  
```

```{r}
ggplot(data = lizards, aes(x = total_length, y = weight)) + 
  geom_point(aes(color = common_name)) +
  facet_wrap(~ common_name)
```

```{r}
# use dplyr::count to find the toal number of lizards by common name in the lizards data set

lizard_counts <- lizards |> count(common_name)

```

```{r}
# used fct_reorder() to convert common_name values to factors and then ordered them from most to least

ggplot(data = lizard_counts, aes(y = fct_reorder(common_name, -n), x = n)) +
  geom_col(aes(fill = common_name)) 
```

```{r}
# same graph as above

ggplot(data = lizards, aes(x = total_length, y = weight)) + 
  geom_point(aes(color = weight)) +
  scale_y_continuous(limits = c(0, 100),
                     breaks = seq(from = 0, to = 100, by = 20),
                     expand = c(0, 0)) +
  scale_color_gradient(low = "red", high = "navy")

# or can do scale_color_gradient(colors = c("yellow", "orange", "purple"))
                     
```
